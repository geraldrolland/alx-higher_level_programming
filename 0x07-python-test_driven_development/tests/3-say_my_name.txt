============================

How to use 3-say_my_name.txt

============================

This module define the function `say_my_name(first_name, last_name="")`

USAGE

=====

`say_my_name(...)` prints the first name and last name.


::


    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Smith")
    My name is John Smith


::


    >>> say_my_name("Bob")
    My name is Bob 


::


    >>> say_my_name("mike", "")
    My name is mike 


Note `say_my_name(...)` do not allow argument of non-string type or digit string type,
otherwise a TypeError is raised.


::


    >>> say_my_name(2, "mike")
    Traceback (most recent call last):
    TypeError: first_name must be a string


::


    >>> say_my_name("mike", 2)
    Traceback (most recent call last):
    TypeError: last_name must be a string


::


    >>> say_my_name("jay12", "smith")
    Traceback (most recent call last):
    TypeError: first_name must be a string


::


    >>> say_my_name("peter", "jay12")
    Traceback (most recent call last):
    TypeError: last_name must be a string


::


    >>> say_my_name("123", "jay")
    Traceback (most recent call last):
    TypeError: first_name must be a string


::


    >>> say_my_name(None, "james")
    Traceback (most recent call last):
    TypeError: first_name must be a string


::


    >>> say_my_name("james", None)
    Traceback (most recent call last):
    TypeError: last_name must be a string


::


    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string


::


    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'


::


    >>> say_my_name("", "mike")
    Traceback (most recent call last):
    TypeError: first_name must be a string
