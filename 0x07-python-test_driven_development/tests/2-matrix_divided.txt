===============================

How to use 2-matrix_divided.txt

===============================

This module define the function `matrix_divided(matrix, div)`

USAGE

=====

``matrix_divided(...) return a new matrix divided by an integer argument.


::


    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


::


    >>> matrix = [[1, -2, 3], [-4, 5, -6]]
    >>> matrix_divided(matrix, 5)
    [[0.2, -0.4, 0.6], [-0.8, 1.0, -1.2]]


::


    >>> matrix = [[2.5, -5.0, 7.2], [4, 1.0, -3.5]]
    >>> matrix_divided(matrix, 3)
    [[0.83, -1.67, 2.4], [1.33, 0.33, -1.17]]


::


    >>> matrix = [[2.5, 5.0, 7.2], [4, 1.0, 3.5]]
    >>> matrix_divided(matrix, 2.7)
    [[0.93, 1.85, 2.67], [1.48, 0.37, 1.3]]


::


    >>> matrix = [[2, 5, 7], [4, 1, 3]]
    >>> matrix_divided(matrix, 2.5)
    [[0.8, 2.0, 2.8], [1.6, 0.4, 1.2]]


::


    >>> matrix = [[1, 6, -3]]
    >>> matrix_divided(matrix, 4)
    [[0.25, 1.5, -0.75]]


``matrix_divided(...) do not allow  None integer or Non float types, argument div must be an integer,
otherwise an Exception is raised.


::


    >>> matrix = [[1, 2, 3], [4, "hey", 6]]
    >>> matrix_divided(matrix, 4)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::


    >>> matrix = [[1, "hi", -3]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::


    >>> matrix = [[1, 2, 3], [4, 9, 8, 6]]
    >>> matrix_divided(matrix, -2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size


::


    >>> matrix = [[1, 2, 3], [4, 9, 8, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero


::


    >>> matrix = [[None]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::


    >>> matrix = []
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::


    >>> matrix_divided(2.5)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'


::


    >>> matrix = ((1, 2, 3), (4, 5, 6))
    >>>
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::


    >>> matrix = [[1, 2, 3], [4, 8, 3]]
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'


::


    >>> matrix = None
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::


    >>> matrix = [[1, 2, 3], [4, 8, 3]]
    >>> matrix_divided(matrix, "zero")
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


An empty list of lists do not raise an exception


::


    >>> matrix = [[]]
    >>> matrix_divided(matrix, 2)
    [[]]
